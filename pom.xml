<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.nwm.xmart</groupId>
    <artifactId>app-streaming</artifactId>
    <version>${build.number}</version>
    <packaging>jar</packaging>

    <properties>
        <argon.client.version>6.5.J2.41223</argon.client.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <build-time>${maven.build.timestamp}</build-time>
        <maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
        <maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>
        <maven-jar-plugin.version>3.0.2</maven-jar-plugin.version>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <flink.version>1.3.2</flink.version>
        <slf4j.version>1.7.7</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <datafabric-flink-client.version>4.10.13-SNAPSHOT</datafabric-flink-client.version>
        <mssql-jdbc.version>6.2.1.jre8</mssql-jdbc.version>
        <guice.version>4.0</guice.version>
        <json-api.version>1.1.2</json-api.version>
        <javax.json.version>1.1.2</javax.json.version>
        <junit-jupiter-api.version>5.4.2</junit-jupiter-api.version>
        <junit-jupiter-engine.version>5.4.2</junit-jupiter-engine.version>
        <junit-vintage-engine.version>4.12.2</junit-vintage-engine.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
        <powermock-api-mockito2.version>1.7.3</powermock-api-mockito2.version>
    </properties>

    <repositories>
        <repository>
            <id>argon-ems-all-repos</id>
            <url>https://artifactory.server.rbsgrp.net/artifactory/argon-ems-all-repos</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>frobi-all-repos</id>
            <url>https://artifactory.server.rbsgrp.net/artifactory/frobi-all-repos</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>data-fabric-all-repos</id>
            <url>https://artifactory.server.rbsgrp.net/artifactory/data-fabric-all-repos</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>odc-all-repos</id>
            <url>https://artifactory.server.rbsgrp.net/artifactory/odc-all-repos</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-java</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-java_2.10</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-clients_2.10</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka-0.10_2.10</artifactId>
            <version>${flink.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.nwm.xmart</groupId>
            <artifactId>datafabric-flink-client</artifactId>
            <version>${datafabric-flink-client.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <artifactId>*</artifactId>
                    <groupId>log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>${mssql-jdbc.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter-api.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit-vintage-engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-surefire-provider</artifactId>
            <version>${junit-platform-surefire-provider.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock-api-mockito2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>${json-api.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>${javax.json.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Start Argon dependencies -->
        <dependency>
            <groupId>com.rbsfm.argon.client.ems</groupId>
            <artifactId>argonclient</artifactId>
            <version>6.5.J2.41223</version>
        </dependency>
        <dependency>
            <groupId>com.rbsfm.argon.client.ems</groupId>
            <artifactId>argonv6utilities</artifactId>
            <version>6.5.J2.41223</version>
        </dependency>
        <dependency>
            <groupId>com.rbsfm.argon</groupId>
            <artifactId>ojdbc5</artifactId>
            <version>11.2.0.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.rbsfm.argon</groupId>
            <artifactId>jms</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>com.rbsfm.argon</groupId>
            <artifactId>tibjms</artifactId>
            <version>6.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.rbsfm.argon</groupId>
            <artifactId>ning_lz</artifactId>
            <version>0.7.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.rbsfm.argon</groupId>
            <artifactId>ma-validator</artifactId>
            <version>6.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20180813</version>
        </dependency>
        <!-- End Argon dependencies -->
    </dependencies>

    <distributionManagement>
        <repository>
            <id>frobi-libs-releases-local</id>
            <url>https://artifactory.server.rbsgrp.net/artifactory/frobi-libs-releases-local</url>
        </repository>
        <snapshotRepository>
            <id>frobi-libs-snapshots-local</id>
            <url>https://artifactory.server.rbsgrp.net/artifactory/frobi-libs-snapshots-local</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
        <profile>
            <!-- Profile for packaging correct JAR files -->
            <id>excludes-from-cluster-build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <!-- Run shade goal on package phase -->
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <artifactSet>
                                        <excludes combine.self="override">
                                            <!-- This list contains all dependencies of flink-dist
                                            Everything else will be packaged into the fat-jar
                                            -->
                                            <exclude>org.apache.flink:flink-annotations</exclude>
                                            <exclude>org.apache.flink:flink-shaded-hadoop2</exclude>
                                            <exclude>org.apache.flink:flink-shaded-curator-recipes</exclude>
                                            <exclude>org.apache.flink:flink-core</exclude>
                                            <exclude>org.apache.flink:flink-java</exclude>
                                            <exclude>org.apache.flink:flink-scala_2.10</exclude>
                                            <exclude>org.apache.flink:flink-runtime_2.10</exclude>
                                            <exclude>org.apache.flink:flink-optimizer_2.10</exclude>
                                            <exclude>org.apache.flink:flink-clients_2.10</exclude>
                                            <exclude>org.apache.flink:flink-avro_2.10</exclude>
                                            <exclude>org.apache.flink:flink-examples-batch_2.10</exclude>
                                            <exclude>org.apache.flink:flink-examples-streaming_2.10</exclude>
                                            <exclude>org.apache.flink:flink-streaming-java_2.10</exclude>
                                            <exclude>org.apache.flink:flink-streaming-scala_2.10</exclude>
                                            <exclude>org.apache.flink:flink-scala-shell_2.10</exclude>
                                            <exclude>org.apache.flink:flink-python</exclude>
                                            <exclude>org.apache.flink:flink-metrics-core</exclude>
                                            <exclude>org.apache.flink:flink-metrics-jmx</exclude>
                                            <exclude>org.apache.flink:flink-statebackend-rocksdb_2.10</exclude>
                                            <!-- Also exclude very big transitive dependencies of Flink
                                            WARNING: You have to remove these excludes if your code relies on other
                                            versions of these dependencies.
                                            -->
                                            <exclude>log4j:log4j</exclude>
                                            <exclude>org.scala-lang:scala-library</exclude>
                                            <exclude>org.scala-lang:scala-compiler</exclude>
                                            <exclude>org.scala-lang:scala-reflect</exclude>
                                            <exclude>com.data-artisans:flakka-actor_*</exclude>
                                            <exclude>com.data-artisans:flakka-remote_*</exclude>
                                            <exclude>com.data-artisans:flakka-slf4j_*</exclude>
                                            <exclude>io.netty:netty-all</exclude>
                                            <exclude>io.netty:netty</exclude>
                                            <exclude>commons-fileupload:commons-fileupload</exclude>
                                            <exclude>org.apache.avro:avro</exclude>
                                            <exclude>commons-collections:commons-collections</exclude>
                                            <exclude>org.codehaus.jackson:jackson-core-asl</exclude>
                                            <exclude>org.codehaus.jackson:jackson-mapper-asl</exclude>
                                            <exclude>com.thoughtworks.paranamer:paranamer</exclude>
                                            <exclude>org.xerial.snappy:snappy-java</exclude>
                                            <exclude>org.apache.commons:commons-compress</exclude>
                                            <exclude>org.tukaani:xz</exclude>
                                            <exclude>com.esotericsoftware.kryo:kryo</exclude>
                                            <exclude>com.esotericsoftware.minlog:minlog</exclude>
                                            <exclude>org.objenesis:objenesis</exclude>
                                            <exclude>com.twitter:chill_*</exclude>
                                            <exclude>com.twitter:chill-java</exclude>
                                            <exclude>commons-lang:commons-lang</exclude>
                                            <exclude>junit:junit</exclude>
                                            <exclude>org.apache.commons:commons-lang3</exclude>
                                            <exclude>org.slf4j:slf4j-api</exclude>
                                            <exclude>org.slf4j:slf4j-log4j12</exclude>
                                            <exclude>log4j:log4j</exclude>
                                            <exclude>org.apache.commons:commons-math</exclude>
                                            <exclude>org.apache.sling:org.apache.sling.commons.json</exclude>
                                            <exclude>commons-logging:commons-logging</exclude>
                                            <exclude>commons-codec:commons-codec</exclude>
                                            <exclude>com.fasterxml.jackson.core:jackson-core</exclude>
                                            <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                                            <exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>
                                            <exclude>stax:stax-api</exclude>
                                            <exclude>com.typesafe:config</exclude>
                                            <exclude>org.uncommons.maths:uncommons-maths</exclude>
                                            <exclude>com.github.scopt:scopt_*</exclude>
                                            <exclude>commons-io:commons-io</exclude>
                                            <exclude>commons-cli:commons-cli</exclude>
                                        </excludes>
                                    </artifactSet>
                                    <filters>
                                        <filter>
                                            <artifact>org.apache.flink:*</artifact>
                                            <excludes>
                                                <!-- exclude shaded google but include shaded curator -->
                                                <exclude>org/apache/flink/shaded/com/**</exclude>
                                                <exclude>web-docs/**</exclude>
                                            </excludes>
                                        </filter>
                                        <filter>
                                            <!-- Do not copy the signatures in the META-INF folder.
                                            Otherwise, this might cause SecurityExceptions when using the JAR. -->
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Profile for packaging correct JAR files -->
            <id>excludes-from-ide-build</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <version>${maven-shade-plugin.version}</version>
                        <executions>
                            <!-- Run shade goal on package phase -->
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                                <configuration>
                                    <filters>
                                        <filter>
                                            <!-- Do not copy the signatures in the META-INF folder.
                                            Otherwise, this might cause SecurityExceptions when using the JAR. -->
                                            <artifact>*:*</artifact>
                                            <excludes>
                                                <exclude>META-INF/*.SF</exclude>
                                                <exclude>META-INF/*.DSA</exclude>
                                                <exclude>META-INF/*.RSA</exclude>
                                            </excludes>
                                        </filter>
                                    </filters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <outputDirectory>target/classes</outputDirectory>
        <testOutputDirectory>target/test-classes</testOutputDirectory>
        <sourceDirectory>src/main/java</sourceDirectory>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <!-- Set a compiler level -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <!-- Run shade goal on package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- If you want to use ./bin/flink run <quickstart jar> uncomment the following lines.
                            This will add a Main-Class entry to the manifest file -->

                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.nwm.xmart.core.XmartStreaming</mainClass>
                                </transformer>
                            </transformers>

                            <createDependencyReducedPom>false</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>${junit-platform-surefire-provider.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit-jupiter-engine.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

    </build>

</project>

